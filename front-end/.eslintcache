[{"C:\\_repo\\human_x\\front-end\\src\\index.js":"1","C:\\_repo\\human_x\\front-end\\src\\App.js":"2","C:\\_repo\\human_x\\front-end\\src\\modules\\index.js":"3","C:\\_repo\\human_x\\front-end\\src\\pages\\UserRegistPage.js":"4","C:\\_repo\\human_x\\front-end\\src\\pages\\StartPage.js":"5","C:\\_repo\\human_x\\front-end\\src\\pages\\ResultPage.js":"6","C:\\_repo\\human_x\\front-end\\src\\pages\\QuestionPage.js":"7","C:\\_repo\\human_x\\front-end\\src\\pages\\common\\AppPage.js":"8","C:\\_repo\\human_x\\front-end\\src\\components\\common\\ErrorPage.js":"9","C:\\_repo\\human_x\\front-end\\src\\modules\\question.js":"10","C:\\_repo\\human_x\\front-end\\src\\modules\\inspection.js":"11","C:\\_repo\\human_x\\front-end\\src\\modules\\result.js":"12","C:\\_repo\\human_x\\front-end\\src\\components\\common\\Loading.js":"13","C:\\_repo\\human_x\\front-end\\src\\pages\\common\\FooterPage.js":"14","C:\\_repo\\human_x\\front-end\\src\\pages\\common\\HeaderPage.js":"15","C:\\_repo\\human_x\\front-end\\src\\pages\\common\\ToolbarPage.js":"16","C:\\_repo\\human_x\\front-end\\src\\api\\resultAPI.js":"17","C:\\_repo\\human_x\\front-end\\src\\components\\inspection\\Question.js":"18","C:\\_repo\\human_x\\front-end\\src\\api\\questionAPI.js":"19","C:\\_repo\\human_x\\front-end\\src\\pages\\AnswerPage.js":"20","C:\\_repo\\human_x\\front-end\\src\\components\\inspection\\Answer.js":"21","C:\\_repo\\human_x\\front-end\\src\\components\\share\\KakaoShareButton.js":"22","C:\\_repo\\human_x\\front-end\\src\\modules\\user.js":"23","C:\\_repo\\human_x\\front-end\\src\\api\\userAPI.js":"24"},{"size":744,"mtime":1611534134112,"results":"25","hashOfConfig":"26"},{"size":862,"mtime":1611534134093,"results":"27","hashOfConfig":"26"},{"size":287,"mtime":1611557005033,"results":"28","hashOfConfig":"26"},{"size":3763,"mtime":1611534134129,"results":"29","hashOfConfig":"26"},{"size":2243,"mtime":1611557658263,"results":"30","hashOfConfig":"26"},{"size":5581,"mtime":1611554883748,"results":"31","hashOfConfig":"26"},{"size":5072,"mtime":1611542012719,"results":"32","hashOfConfig":"26"},{"size":1168,"mtime":1611553170639,"results":"33","hashOfConfig":"26"},{"size":577,"mtime":1610928643965,"results":"34","hashOfConfig":"26"},{"size":1203,"mtime":1611534134114,"results":"35","hashOfConfig":"26"},{"size":1242,"mtime":1611552826430,"results":"36","hashOfConfig":"26"},{"size":1121,"mtime":1611107311860,"results":"37","hashOfConfig":"26"},{"size":819,"mtime":1611534134098,"results":"38","hashOfConfig":"26"},{"size":396,"mtime":1611547787505,"results":"39","hashOfConfig":"26"},{"size":331,"mtime":1611552967551,"results":"40","hashOfConfig":"26"},{"size":987,"mtime":1610928644005,"results":"41","hashOfConfig":"26"},{"size":371,"mtime":1611106664817,"results":"42","hashOfConfig":"26"},{"size":515,"mtime":1611300391041,"results":"43","hashOfConfig":"26"},{"size":190,"mtime":1611293660441,"results":"44","hashOfConfig":"26"},{"size":1797,"mtime":1611103822073,"results":"45","hashOfConfig":"26"},{"size":801,"mtime":1610937201541,"results":"46","hashOfConfig":"26"},{"size":1963,"mtime":1611554817426,"results":"47","hashOfConfig":"26"},{"size":1153,"mtime":1611557037927,"results":"48","hashOfConfig":"26"},{"size":199,"mtime":1611556853221,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"byu8e6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\_repo\\human_x\\front-end\\src\\index.js",[],["106","107"],"C:\\_repo\\human_x\\front-end\\src\\App.js",[],"C:\\_repo\\human_x\\front-end\\src\\modules\\index.js",[],"C:\\_repo\\human_x\\front-end\\src\\pages\\UserRegistPage.js",["108"],"import React, { useState } from 'react';\r\nimport { useLocation } from \"react-router\";\r\nimport { Form } from 'react-bootstrap'\r\nimport FooterPage from './common/FooterPage';\r\nimport '../css/information.css'\r\nimport HeaderPage from './common/HeaderPage';\r\n\r\nconst PUBLIC_URL = process.env.PUBLIC_URL;\r\nconst UserRegistPage = ({ history, match }) => {\r\n  \r\n  const [validated, setValidated] = useState(false);\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const ageGroup = [\r\n    { down: 0, top: 18, text: '18세 이하' },\r\n    { down: 19, top: 25, text: '19~25세' },\r\n    { down: 26, top: 50, text: '26~50세' },\r\n    { down: 50, top: 100, text: '50세 이상' }\r\n  ]\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (!form.checkValidity()) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n    } else {\r\n      history.replace({ pathname: '/pages/1', state: { userInfo: inputs, answerState: {} } });\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    \r\n    <>\r\n      <HeaderPage/>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"information_form\">\r\n          <div className=\"findme__info__select\">\r\n          <Form.Group>\r\n            <div className=\"findme__info__select__label\">\r\n              성별\r\n            </div>\r\n              <div className=\"findme__info__select__option\">\r\n                <label className=\"findme__info__select__option__element\" htmlFor=\"o1_m\">\r\n                  <Form.Control type=\"radio\" id=\"o1_m\" name=\"user_gender\" value=\"male\" onChange={onChange} required />\r\n                  <div className=\"findme__info__select__option__button big\">\r\n                    남자\r\n                  </div>\r\n                  <Form.Control.Feedback type=\"invalid\">성별을 선택해주세요</Form.Control.Feedback>\r\n\r\n                </label>\r\n                <label className=\"findme__info__select__option__element\" htmlFor=\"o1_w\">\r\n                  <Form.Control type=\"radio\" id=\"o1_w\" name=\"user_gender\" value=\"female\" onChange={onChange} required />\r\n                  <div className=\"findme__info__select__option__button big\">\r\n                    여자\r\n                  </div>\r\n                </label>\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <div className=\"findme__info__select__label\">\r\n                나이\r\n              </div>\r\n              <div className=\"findme__info__select__option\">\r\n                {ageGroup.map(({ text }, index) => {\r\n                  return (\r\n                    <label className=\"findme__info__select__option__element\" htmlFor={`age_${index}`} key={index}>\r\n                      <Form.Control type=\"radio\" id={`age_${index}`} name=\"user_age\" value={`group_${index + 1}`} onChange={onChange} required />\r\n                      <div className=\"findme__info__select__option__button\">\r\n                        {text}\r\n                      </div>\r\n                      {index === 2 &&  <Form.Control.Feedback type=\"invalid\">나이를 선택해주세요</Form.Control.Feedback>}\r\n                    </label>\r\n                  )\r\n                })}\r\n              </div>\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"findme__common__next\">\r\n            <button type=\"submit\" className=\"findme__common__next__button\">\r\n              NEXT\r\n              <img className=\"findme__common__next__button--image\" src={PUBLIC_URL + '/images/icons/next.svg'} alt=\"next\" />\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      <FooterPage/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserRegistPage;","C:\\_repo\\human_x\\front-end\\src\\pages\\StartPage.js",["109"],"C:\\_repo\\human_x\\front-end\\src\\pages\\ResultPage.js",["110","111","112","113"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from \"react-router\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getUserResult } from '../modules/result'\r\nimport Loading from '../components/common/Loading';\r\nimport '../css/result.css'\r\nimport HeaderPage from './common/HeaderPage';\r\nimport FooterPage from './common/FooterPage';\r\nimport { Helmet } from 'react-helmet';\r\nimport KakaoShareButton from '../components/share/KakaoShareButton';\r\n\r\nconst makeStringArr = (str) => {\r\n  const tag = '</br>';\r\n  if(!str) return [];\r\n  return str.split(tag);\r\n}\r\n\r\nconst ResultPage = () => {\r\n\r\n  const inspection = useSelector(state => state.inspection);\r\n  const { state } = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (!state || !state.userInfo) return <Redirect to=\"/\" />;\r\n    const { answerState } = state;\r\n    let highScore = 0;\r\n    let allAnswers = [];\r\n\r\n    for (const key in answerState) {\r\n      const result = key.replace('result_', '');\r\n      const answers = answerState[key];\r\n      let totalScore = 0;\r\n      answers.forEach(answer => {\r\n        totalScore += parseInt(answer.score);\r\n      });\r\n\r\n      if (highScore < totalScore) {\r\n        highScore = totalScore;\r\n      }\r\n      allAnswers = allAnswers.concat({\r\n        result: result,\r\n        totalScore: totalScore\r\n      });\r\n    }\r\n\r\n    const results = allAnswers.filter(allAnswer => allAnswer.totalScore === highScore);\r\n    const { inspection_idx } = inspection.data;\r\n    const params = {\r\n      inspection_idx: inspection_idx,\r\n      results: results.map(result => result.result)\r\n    }\r\n    dispatch(getUserResult(params));\r\n\r\n  }, []);\r\n\r\n  const { data, loading, error } = useSelector(state => state.result);\r\n  if (loading || !data) return <Loading loading={loading} />\r\n  if (error) return <div>에러 발생!</div>;\r\n  if (!data) return null;\r\n\r\n  return (\r\n\r\n    <>\r\n      <Helmet>\r\n        <script src=\"https://developers.kakao.com/sdk/js/kakao.js\"></script>\r\n      </Helmet>\r\n      <HeaderPage/>\r\n        {data.map(({ result_idx, result_name, result_title, main_sentence, sub_sentence, keyword1, keyword2 }, index) => {\r\n          return (\r\n\r\n            <div className=\"findme__result\" key={index}>\r\n\r\n              <div className=\"findme__result__title\">\r\n                <strong dangerouslySetInnerHTML={{ __html: result_title }} /><br />\r\n                <span className=\"findme__result__title--highlight\">{result_name}</span>\r\n              </div>\r\n              <div className=\"findme__result__illustration\">\r\n                <img\r\n                  src={process.env.PUBLIC_URL + `/images/illustration/result-img-${result_idx}.png`}\r\n                  alt=\"result illustration\"\r\n                  className=\"findme__result__illustration__image\" />\r\n                <div className=\"findme__result__illustration__explanation\">\r\n                  <span dangerouslySetInnerHTML={{ __html: main_sentence }} />\r\n                </div>\r\n              </div>\r\n              <div className=\"findme__result__detail\">\r\n                {makeStringArr(sub_sentence).map((str, index) => {\r\n                  return (\r\n                    <div className=\"findme__result__detail__element\" key={index}>\r\n                      {str}\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n\r\n              <div className=\"findme__result__pros-cons\">\r\n                <div className=\"findme__result__pros-cons__label\">\r\n                  관찰형의 강점 키워드\r\n                </div>\r\n                {makeStringArr(keyword1).map((str, index) => {\r\n                  return (\r\n                    <div className=\"findme__result__pros-cons__element\" key={index}>\r\n                      #{str}\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n              <div className=\"findme__result__pros-cons\">\r\n                <div className=\"findme__result__pros-cons__label\">\r\n                  관찰형의 약점 키워드\r\n                </div>\r\n                {makeStringArr(keyword2).map((str, index) => {\r\n                  return (\r\n                    <div className=\"findme__result__pros-cons__element\" key={index}>\r\n                      #{str}\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n\r\n        <div className=\"findme__result__share\">\r\n          <div className=\"findme__result__share__label\">\r\n            결과 공유하기\r\n        </div>\r\n          <div className=\"findme__result__share__buttons\">\r\n            <button className=\"findme__result__share__buttons--kakao\">\r\n              <img src={process.env.PUBLIC_URL + \"/images/icons/kakao.png\"} />\r\n            </button>\r\n            <button className=\"findme__result__share__buttons--link\">\r\n              <img src={process.env.PUBLIC_URL + \"/images/icons/url.png\"} />\r\n            </button>\r\n            {/* <KakaoShareButton/> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"findme__result__more\">\r\n          <div className=\"findme__result__more__text\">\r\n            내게 맞는 전공·직업·직무·학습법·교과목 등등<br />\r\n          더 구체적으로 알고 싶다면,\r\n        </div>\r\n          <button className=\"findme__result__more__button\">\r\n            한국진로적성센터 바로가기\r\n        </button>\r\n        </div>\r\n      <FooterPage/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResultPage;","C:\\_repo\\human_x\\front-end\\src\\pages\\QuestionPage.js",["114","115","116"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Loading from '../components/common/Loading';\r\nimport { getQuestions } from '../modules/question';\r\nimport { insertUserResult } from '../modules/result';\r\nimport * as resultAPI from '../api/resultAPI';\r\nimport Question from '../components/inspection/Question';\r\nimport { useLocation } from \"react-router\";\r\nimport { Form } from 'react-bootstrap'\r\nimport FooterPage from './common/FooterPage';\r\nimport ToolbarPage from './common/ToolbarPage';\r\nimport '../css/question.css'\r\nimport HeaderPage from './common/HeaderPage';\r\n\r\nconst PUBLIC_URL = process.env.PUBLIC_URL;\r\nconst QuestionPage = ({ match, history }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const page = parseInt(match.params.page);\r\n  const { state } = useLocation();\r\n  const [validated, setValidated] = useState(false);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [proceeding, setProceeding] = useState(false);\r\n\r\n  const insertUserResult = (params, userState) => {\r\n\r\n    setProceeding(true);\r\n    setTimeout(() => {\r\n      resultAPI.insertUserResult(params).then(({ data }) => {\r\n        const { success } = data;\r\n        if (success) {\r\n          history.replace({\r\n            pathname: ('/pages/result'),\r\n            state: userState\r\n          });\r\n        } else {\r\n          alert('정보 저장에 실패 하였습니다');\r\n        }\r\n      }).catch(e => {\r\n        alert('서버와 통신오류가 발생하였습니다.');\r\n        console.log(e);\r\n      })\r\n    }, 500)\r\n\r\n  }\r\n\r\n  const goNextPage = (e) => {\r\n    const { userInfo, answerState } = state;\r\n    const { inspection_idx, totalPages } = inspection.data && inspection.data;\r\n\r\n    let answers = {};\r\n    for (const userAnswer of userAnswers) {\r\n      const { result_idx } = userAnswer;\r\n      const key = `result_${result_idx}`;\r\n      if (!answers[key]) {\r\n        answers[key] = [userAnswer];\r\n      } else {\r\n        answers[key] = [...answers[key], userAnswer]\r\n      }\r\n    }\r\n    const userState = {\r\n      userInfo: userInfo,\r\n      answerState: {\r\n        ...answerState,\r\n        ...answers\r\n      }\r\n    }\r\n    const isLastPage = (page === totalPages);\r\n    if (isLastPage) {\r\n      let userAllAnswers = [];\r\n      for (const [key, value] of Object.entries(userState.answerState)) {\r\n        userAllAnswers = [...userAllAnswers, ...value];\r\n\r\n      }\r\n      const params = {\r\n        inspection_idx: inspection_idx,\r\n        user_info: userInfo,\r\n        user_answers: userAllAnswers\r\n      }\r\n      insertUserResult(params, userState);\r\n\r\n    } else {\r\n      history.replace({\r\n        pathname: (isLastPage ? '/pages/result' : `/pages/${page + 1}`),\r\n        state: userState\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (!form.checkValidity()) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n    } else {\r\n      goNextPage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    setUserAnswers([]);\r\n    dispatch(getQuestions(page));\r\n  }, [page]);\r\n\r\n\r\n  const { data, loading, error } = useSelector(state => state.question);\r\n  const inspection = useSelector(state => state.inspection);\r\n\r\n  if (!state || !state.userInfo) return <Redirect to=\"/\" />;\r\n  if (loading || !data || proceeding) return <Loading loading={loading || proceeding} />\r\n  if (error) return <div>에러 발생!</div>;\r\n  if (!data) return null;\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <HeaderPage/>\r\n        <div className=\"findme__question__explanation\">\r\n          평소의 나와 가장 가까울 수록 10점에 가깝게,<br />\r\n          평소의 나와 같지 않을 수록 1점에 가깝게 체크하세요.\r\n        </div>\r\n        <ToolbarPage match={match} />\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"information_form\">\r\n          <div className=\"findme__question__wrapper\">\r\n            <div className=\"findme__question__element\">\r\n              {data.map(({ question_idx, question_text, result_idx, answers, question_number }) => (\r\n                <Question\r\n                  key={question_idx}\r\n                  number={question_number}\r\n                  result_idx={result_idx}\r\n                  text={question_text}\r\n                  answers={answers}\r\n                  question_idx={question_idx}\r\n                  setUserAnswers={setUserAnswers}\r\n                  userAnswers={userAnswers}\r\n                  validated={validated} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"findme__common__next\">\r\n            <button type=\"submit\" className=\"findme__common__next__button\">\r\n              NEXT\r\n            <img className=\"findme__common__next__button--image\" src={PUBLIC_URL + '/images/icons/next.svg'} alt=\"next\" />\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      <FooterPage/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default QuestionPage; ","C:\\_repo\\human_x\\front-end\\src\\pages\\common\\AppPage.js",["117"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getInspection } from '../../modules/inspection';\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nconst AppPage = ({ children }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { host } = window.location;\r\n  useEffect(() => {\r\n    dispatch(getInspection(host));\r\n  }, [host]);\r\n  const { data, loading, error } = useSelector(state => state.inspection);\r\n\r\n  if (loading || !data) return null\r\n  if (error) return <div>에러 발생!</div>;\r\n  if (!data) return null;\r\n\r\n  const { inspection_name } = data;\r\n  return (\r\n    <>\r\n      <Helmet\r\n        meta={[\r\n          { property: \"og:title\", content: inspection_name },\r\n          { property: \"og:description\", content: \"설명\" },\r\n          { property: \"og:image\", content: process.env.PUBLIC_URL + '/images/logo-octagnosis.png' }\r\n        ]}>\r\n        <title>{inspection_name}</title>\r\n        \r\n      </Helmet>\r\n      <div className=\"findme__common__container\">\r\n        <div className=\"findme__common__wrapper\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AppPage;","C:\\_repo\\human_x\\front-end\\src\\components\\common\\ErrorPage.js",["118"],"import React from 'react';\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <div>\r\n      <body>\r\n        <div id=\"notfound\">\r\n          <div className=\"notfound\">\r\n            <div className=\"notfound-404\">\r\n              <div></div>\r\n              <h1>404</h1>\r\n            </div>\r\n            <h2>Page not found</h2>\r\n            <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\r\n            <a href=\"#\">home page</a>\r\n          </div>\r\n        </div>\r\n      </body>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorPage;","C:\\_repo\\human_x\\front-end\\src\\modules\\question.js",[],"C:\\_repo\\human_x\\front-end\\src\\modules\\inspection.js",[],"C:\\_repo\\human_x\\front-end\\src\\modules\\result.js",[],"C:\\_repo\\human_x\\front-end\\src\\components\\common\\Loading.js",[],"C:\\_repo\\human_x\\front-end\\src\\pages\\common\\FooterPage.js",[],"C:\\_repo\\human_x\\front-end\\src\\pages\\common\\HeaderPage.js",[],"C:\\_repo\\human_x\\front-end\\src\\pages\\common\\ToolbarPage.js",[],"C:\\_repo\\human_x\\front-end\\src\\api\\resultAPI.js",[],"C:\\_repo\\human_x\\front-end\\src\\components\\inspection\\Question.js",[],"C:\\_repo\\human_x\\front-end\\src\\api\\questionAPI.js",[],"C:\\_repo\\human_x\\front-end\\src\\pages\\AnswerPage.js",["119","120"],"import Answer from '../components/inspection/Answer';\r\nimport { Form, ButtonGroup } from 'react-bootstrap'\r\nimport { useState } from 'react';\r\n\r\nconst AnswerPage = ({ answers, userAnswers, setUserAnswers, result_idx, validated }) => {\r\n  const [selectedVal, setselectedVal] = useState('');\r\n  const onChange = (e) => {\r\n\r\n    const { value } = e.target;\r\n    const { question_idx, answer_score } = e.currentTarget.dataset;\r\n\r\n    \r\n    setselectedVal(value);\r\n    setUserAnswers([\r\n      ...userAnswers, {\r\n        question_idx: question_idx,\r\n        result_idx: result_idx,\r\n        answer_idx: value,\r\n        score: answer_score,\r\n\r\n      }\r\n    ]);\r\n    userAnswers.map(userAnswer => {\r\n      \r\n      if (question_idx === userAnswer.question_idx) {\r\n        const newAnswers = userAnswers.filter(newAnswer => newAnswer.question_idx !== question_idx);\r\n\r\n        setUserAnswers([...newAnswers,\r\n        {\r\n          question_idx: question_idx,\r\n          result_idx: result_idx,\r\n          answer_idx: value,\r\n          score: answer_score,\r\n        }\r\n        ]);\r\n        return false;\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form.Group>\r\n      <div className=\"findme__question__element__options\">\r\n        \r\n          {answers.map(({ answer_idx, answer_text, answer_score, question_idx }, index) => (\r\n            <Answer\r\n              key={index}\r\n              index={index}\r\n              idx={answer_idx}\r\n              text={answer_text}\r\n              answer_score={answer_score}\r\n              question_idx={question_idx}\r\n              onChange={onChange} />\r\n          ))}\r\n          <br/>\r\n      </div>\r\n      <div className=\"invalid-feedback-custom\">{(!selectedVal && validated) && '문항을 체크해주세요'}</div>\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default AnswerPage;","C:\\_repo\\human_x\\front-end\\src\\components\\inspection\\Answer.js",["121"],"import React from 'react';\r\nimport { Form } from 'react-bootstrap'\r\n\r\nconst Answer = ({ idx, text, answer_score, question_idx, onChange }) => {\r\n\r\n  return (\r\n    <div className=\"findme__question__element__option\">\r\n      <label className=\"findme__question__element__option\" htmlFor={`answer_${idx}`}>\r\n        <input\r\n          type='radio'\r\n          id={`answer_${idx}`}\r\n          name={`question_${question_idx}`}\r\n          className=\"dpN\"\r\n          value={idx}\r\n          label={text}\r\n          data-answer_score={answer_score}\r\n          data-question_idx={question_idx}\r\n          onChange={onChange} \r\n          required/>\r\n        <div className=\"findme__question__element__option-Checker\"></div>\r\n        {text}\r\n      </label>\r\n      \r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Answer;","C:\\_repo\\human_x\\front-end\\src\\components\\share\\KakaoShareButton.js",[],"C:\\_repo\\human_x\\front-end\\src\\modules\\user.js",[],"C:\\_repo\\human_x\\front-end\\src\\api\\userAPI.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":21},{"ruleId":"130","severity":1,"message":"131","line":22,"column":5,"nodeType":"132","endLine":22,"endColumn":7,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":11,"column":8,"nodeType":"128","messageId":"129","endLine":11,"endColumn":24},{"ruleId":"130","severity":1,"message":"135","line":58,"column":6,"nodeType":"132","endLine":58,"endColumn":8,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":134,"column":15,"nodeType":"139","endLine":134,"endColumn":79},{"ruleId":"137","severity":1,"message":"138","line":137,"column":15,"nodeType":"139","endLine":137,"endColumn":77},{"ruleId":"126","severity":1,"message":"140","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":26},{"ruleId":"126","severity":1,"message":"141","line":72,"column":19,"nodeType":"128","messageId":"129","endLine":72,"endColumn":22},{"ruleId":"130","severity":1,"message":"142","line":107,"column":6,"nodeType":"132","endLine":107,"endColumn":12,"suggestions":"143"},{"ruleId":"130","severity":1,"message":"142","line":12,"column":6,"nodeType":"132","endLine":12,"endColumn":12,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":15,"column":13,"nodeType":"139","endLine":15,"endColumn":25},{"ruleId":"126","severity":1,"message":"147","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":27},{"ruleId":"148","severity":1,"message":"149","line":23,"column":32,"nodeType":"150","messageId":"151","endLine":23,"endColumn":34},{"ruleId":"126","severity":1,"message":"152","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'inspection.data.inspection_idx'. Either include them or remove the dependency array.","ArrayExpression",["155"],"'KakaoShareButton' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'inspection.data', and 'state'. Either include them or remove the dependency array.",["156"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'insertUserResult' is defined but never used.","'key' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["157"],["158"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ButtonGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [dispatch, inspection.data.inspection_idx]",{"range":"167","text":"168"},"Update the dependencies array to be: [dispatch, inspection.data, state]",{"range":"169","text":"170"},"Update the dependencies array to be: [dispatch, page]",{"range":"171","text":"172"},"Update the dependencies array to be: [dispatch, host]",{"range":"173","text":"174"},[745,747],"[dispatch, inspection.data.inspection_idx]",[1734,1736],"[dispatch, inspection.data, state]",[3129,3135],"[dispatch, page]",[373,379],"[dispatch, host]"]