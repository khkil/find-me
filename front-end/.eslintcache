[{"C:\\dev\\repo\\human-x\\front-end\\src\\index.js":"1","C:\\dev\\repo\\human-x\\front-end\\src\\App.js":"2","C:\\dev\\repo\\human-x\\front-end\\src\\modules\\index.js":"3","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\StartPage.js":"4","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\UserRegistPage.js":"5","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\common\\FooterPage.js":"6","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\common\\AppPage.js":"7","C:\\dev\\repo\\human-x\\front-end\\src\\components\\common\\ErrorPage.js":"8","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\ResultPage.js":"9","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\QuestionPage.js":"10","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\common\\HeaderPage.js":"11","C:\\dev\\repo\\human-x\\front-end\\src\\modules\\question.js":"12","C:\\dev\\repo\\human-x\\front-end\\src\\modules\\inspection.js":"13","C:\\dev\\repo\\human-x\\front-end\\src\\modules\\result.js":"14","C:\\dev\\repo\\human-x\\front-end\\src\\components\\common\\Loading.js":"15","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\common\\ToolbarPage.js":"16","C:\\dev\\repo\\human-x\\front-end\\src\\api\\resultAPI.js":"17","C:\\dev\\repo\\human-x\\front-end\\src\\components\\inspection\\Question.js":"18","C:\\dev\\repo\\human-x\\front-end\\src\\api\\questionAPI.js":"19","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\AnswerPage.js":"20","C:\\dev\\repo\\human-x\\front-end\\src\\components\\inspection\\Answer.js":"21"},{"size":744,"mtime":1611498072303,"results":"22","hashOfConfig":"23"},{"size":862,"mtime":1611498048051,"results":"24","hashOfConfig":"23"},{"size":253,"mtime":1610752423611,"results":"25","hashOfConfig":"23"},{"size":1607,"mtime":1611499079138,"results":"26","hashOfConfig":"23"},{"size":3763,"mtime":1611499101068,"results":"27","hashOfConfig":"23"},{"size":303,"mtime":1610889977105,"results":"28","hashOfConfig":"23"},{"size":723,"mtime":1611499050057,"results":"29","hashOfConfig":"23"},{"size":577,"mtime":1610874851848,"results":"30","hashOfConfig":"23"},{"size":5399,"mtime":1611456956385,"results":"31","hashOfConfig":"23"},{"size":5011,"mtime":1611499122990,"results":"32","hashOfConfig":"23"},{"size":323,"mtime":1611498048065,"results":"33","hashOfConfig":"23"},{"size":1203,"mtime":1611498048059,"results":"34","hashOfConfig":"23"},{"size":1205,"mtime":1610752423615,"results":"35","hashOfConfig":"23"},{"size":1121,"mtime":1611456956376,"results":"36","hashOfConfig":"23"},{"size":819,"mtime":1611498048053,"results":"37","hashOfConfig":"23"},{"size":987,"mtime":1611497714865,"results":"38","hashOfConfig":"23"},{"size":371,"mtime":1610979972401,"results":"39","hashOfConfig":"23"},{"size":515,"mtime":1611061999484,"results":"40","hashOfConfig":"23"},{"size":190,"mtime":1611464207351,"results":"41","hashOfConfig":"23"},{"size":1797,"mtime":1611063319923,"results":"42","hashOfConfig":"23"},{"size":801,"mtime":1610976066198,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"51494e",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},"C:\\dev\\repo\\human-x\\front-end\\src\\index.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\App.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\modules\\index.js",[],["91","92"],"C:\\dev\\repo\\human-x\\front-end\\src\\pages\\StartPage.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\pages\\UserRegistPage.js",["93"],"C:\\dev\\repo\\human-x\\front-end\\src\\pages\\common\\FooterPage.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\pages\\common\\AppPage.js",["94"],"C:\\dev\\repo\\human-x\\front-end\\src\\components\\common\\ErrorPage.js",["95"],"import React from 'react';\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <div>\r\n      <body>\r\n        <div id=\"notfound\">\r\n          <div className=\"notfound\">\r\n            <div className=\"notfound-404\">\r\n              <div></div>\r\n              <h1>404</h1>\r\n            </div>\r\n            <h2>Page not found</h2>\r\n            <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\r\n            <a href=\"#\">home page</a>\r\n          </div>\r\n        </div>\r\n      </body>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorPage;","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\ResultPage.js",["96","97","98"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from \"react-router\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getUserResult } from '../modules/result'\r\nimport Loading from '../components/common/Loading';\r\nimport '../css/result.css'\r\n\r\nconst makeStringArr = (str) => {\r\n  const tag = '</br>';\r\n  if(!str) return [];\r\n  return str.split(tag);\r\n}\r\n\r\nconst ResultPage = () => {\r\n\r\n  const inspection = useSelector(state => state.inspection);\r\n  const { state } = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (!state || !state.userInfo) return <Redirect to=\"/\" />;\r\n    const { answerState } = state;\r\n    let highScore = 0;\r\n    let allAnswers = [];\r\n\r\n    for (const key in answerState) {\r\n      const result = key.replace('result_', '');\r\n      const answers = answerState[key];\r\n      let totalScore = 0;\r\n      answers.forEach(answer => {\r\n        totalScore += parseInt(answer.score);\r\n      });\r\n\r\n      if (highScore < totalScore) {\r\n        highScore = totalScore;\r\n      }\r\n      allAnswers = allAnswers.concat({\r\n        result: result,\r\n        totalScore: totalScore\r\n      });\r\n    }\r\n\r\n    const results = allAnswers.filter(allAnswer => allAnswer.totalScore === highScore);\r\n    const { inspection_idx } = inspection.data;\r\n    const params = {\r\n      inspection_idx: inspection_idx,\r\n      results: results.map(result => result.result)\r\n    }\r\n    dispatch(getUserResult(params));\r\n\r\n  }, []);\r\n\r\n  const { data, loading, error } = useSelector(state => state.result);\r\n  if (loading || !data) return <Loading loading={loading} />\r\n  if (error) return <div>에러 발생!</div>;\r\n  if (!data) return null;\r\n\r\n  return (\r\n\r\n    <>\r\n      {data.map(({ result_idx, result_name, result_title, main_sentence, sub_sentence, keyword1, keyword2 }, index) => {\r\n        return (\r\n\r\n          <div className=\"findme__result\" key={index}>\r\n\r\n            <div className=\"findme__result__title\">\r\n              <strong dangerouslySetInnerHTML={{ __html: result_title }} /><br />\r\n              <span className=\"findme__result__title--highlight\">{result_name}</span>\r\n            </div>\r\n            <div className=\"findme__result__illustration\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + `/images/illustration/result-img-${result_idx}.png`}\r\n                alt=\"result illustration\"\r\n                className=\"findme__result__illustration__image\" />\r\n              <div className=\"findme__result__illustration__explanation\">\r\n                <span dangerouslySetInnerHTML={{ __html: main_sentence }} />\r\n              </div>\r\n            </div>\r\n            <div className=\"findme__result__detail\">\r\n              {makeStringArr(sub_sentence).map((str, index) => {\r\n                return (\r\n                  <div className=\"findme__result__detail__element\" key={index}>\r\n                    {str}\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n\r\n            <div className=\"findme__result__pros-cons\">\r\n              <div className=\"findme__result__pros-cons__label\">\r\n                관찰형의 강점 키워드\r\n              </div>\r\n              {makeStringArr(keyword1).map((str, index) => {\r\n                return (\r\n                  <div className=\"findme__result__pros-cons__element\" key={index}>\r\n                    #{str}\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n            <div className=\"findme__result__pros-cons\">\r\n              <div className=\"findme__result__pros-cons__label\">\r\n                관찰형의 약점 키워드\r\n              </div>\r\n              {makeStringArr(keyword2).map((str, index) => {\r\n                return (\r\n                  <div className=\"findme__result__pros-cons__element\" key={index}>\r\n                    #{str}\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n\r\n      <div className=\"findme__result__share\">\r\n        <div className=\"findme__result__share__label\">\r\n          결과 공유하기\r\n      </div>\r\n        <div className=\"findme__result__share__buttons\">\r\n          <button className=\"findme__result__share__buttons--kakao\">\r\n            <img src={process.env.PUBLIC_URL + \"/images/icons/kakao.png\"} />\r\n          </button>\r\n          <button className=\"findme__result__share__buttons--link\">\r\n            <img src={process.env.PUBLIC_URL + \"/images/icons/url.png\"} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"findme__result__more\">\r\n        <div className=\"findme__result__more__text\">\r\n          내게 맞는 전공·직업·직무·학습법·교과목 등등<br />\r\n        더 구체적으로 알고 싶다면,\r\n      </div>\r\n        <button className=\"findme__result__more__button\">\r\n          한국진로적성센터 바로가기\r\n      </button>\r\n      </div>\r\n\r\n      <div className=\"findme__result__logos\">\r\n        <img className=\"findme__result__logos--octagnosis\" src={process.env.PUBLIC_URL + \"/images/logo-octagnosis.png\"} alt=\"Korea career aptitude center\" />\r\n        <img className=\"findme__result__logos--kcac\" src={process.env.PUBLIC_URL + '/images/logo.svg'} alt=\"Korea career aptitude center\" />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResultPage;","C:\\dev\\repo\\human-x\\front-end\\src\\pages\\QuestionPage.js",["99","100","101"],"C:\\dev\\repo\\human-x\\front-end\\src\\pages\\common\\HeaderPage.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\modules\\question.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\modules\\inspection.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\modules\\result.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\components\\common\\Loading.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\pages\\common\\ToolbarPage.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\api\\resultAPI.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\components\\inspection\\Question.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\api\\questionAPI.js",[],"C:\\dev\\repo\\human-x\\front-end\\src\\pages\\AnswerPage.js",["102","103"],"import Answer from '../components/inspection/Answer';\r\nimport { Form, ButtonGroup } from 'react-bootstrap'\r\nimport { useState } from 'react';\r\n\r\nconst AnswerPage = ({ answers, userAnswers, setUserAnswers, result_idx, validated }) => {\r\n  const [selectedVal, setselectedVal] = useState('');\r\n  const onChange = (e) => {\r\n\r\n    const { value } = e.target;\r\n    const { question_idx, answer_score } = e.currentTarget.dataset;\r\n\r\n    \r\n    setselectedVal(value);\r\n    setUserAnswers([\r\n      ...userAnswers, {\r\n        question_idx: question_idx,\r\n        result_idx: result_idx,\r\n        answer_idx: value,\r\n        score: answer_score,\r\n\r\n      }\r\n    ]);\r\n    userAnswers.map(userAnswer => {\r\n      \r\n      if (question_idx === userAnswer.question_idx) {\r\n        const newAnswers = userAnswers.filter(newAnswer => newAnswer.question_idx !== question_idx);\r\n\r\n        setUserAnswers([...newAnswers,\r\n        {\r\n          question_idx: question_idx,\r\n          result_idx: result_idx,\r\n          answer_idx: value,\r\n          score: answer_score,\r\n        }\r\n        ]);\r\n        return false;\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form.Group>\r\n      <div className=\"findme__question__element__options\">\r\n        \r\n          {answers.map(({ answer_idx, answer_text, answer_score, question_idx }, index) => (\r\n            <Answer\r\n              key={index}\r\n              index={index}\r\n              idx={answer_idx}\r\n              text={answer_text}\r\n              answer_score={answer_score}\r\n              question_idx={question_idx}\r\n              onChange={onChange} />\r\n          ))}\r\n          <br/>\r\n      </div>\r\n      <div className=\"invalid-feedback-custom\">{(!selectedVal && validated) && '문항을 체크해주세요'}</div>\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default AnswerPage;","C:\\dev\\repo\\human-x\\front-end\\src\\components\\inspection\\Answer.js",["104"],"import React from 'react';\r\nimport { Form } from 'react-bootstrap'\r\n\r\nconst Answer = ({ idx, text, answer_score, question_idx, onChange }) => {\r\n\r\n  return (\r\n    <div className=\"findme__question__element__option\">\r\n      <label className=\"findme__question__element__option\" htmlFor={`answer_${idx}`}>\r\n        <input\r\n          type='radio'\r\n          id={`answer_${idx}`}\r\n          name={`question_${question_idx}`}\r\n          className=\"dpN\"\r\n          value={idx}\r\n          label={text}\r\n          data-answer_score={answer_score}\r\n          data-question_idx={question_idx}\r\n          onChange={onChange} \r\n          required/>\r\n        <div className=\"findme__question__element__option-Checker\"></div>\r\n        {text}\r\n      </label>\r\n      \r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Answer;",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":11,"column":6,"nodeType":"115","endLine":11,"endColumn":12,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":15,"column":13,"nodeType":"119","endLine":15,"endColumn":25},{"ruleId":"113","severity":1,"message":"120","line":54,"column":6,"nodeType":"115","endLine":54,"endColumn":8,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":126,"column":13,"nodeType":"119","endLine":126,"endColumn":77},{"ruleId":"122","severity":1,"message":"123","line":129,"column":13,"nodeType":"119","endLine":129,"endColumn":75},{"ruleId":"109","severity":1,"message":"124","line":6,"column":10,"nodeType":"111","messageId":"112","endLine":6,"endColumn":26},{"ruleId":"109","severity":1,"message":"125","line":72,"column":19,"nodeType":"111","messageId":"112","endLine":72,"endColumn":22},{"ruleId":"113","severity":1,"message":"114","line":106,"column":6,"nodeType":"115","endLine":106,"endColumn":12,"suggestions":"126"},{"ruleId":"109","severity":1,"message":"127","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":23,"column":32,"nodeType":"130","messageId":"131","endLine":23,"endColumn":34},{"ruleId":"109","severity":1,"message":"132","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["135"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch', 'inspection.data', and 'state'. Either include them or remove the dependency array.",["136"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'insertUserResult' is defined but never used.","'key' is assigned a value but never used.",["137"],"'ButtonGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [dispatch, host]",{"range":"144","text":"145"},"Update the dependencies array to be: [dispatch, inspection.data, state]",{"range":"146","text":"147"},"Update the dependencies array to be: [dispatch, page]",{"range":"148","text":"149"},[334,340],"[dispatch, host]",[1530,1532],"[dispatch, inspection.data, state]",[3068,3074],"[dispatch, page]"]